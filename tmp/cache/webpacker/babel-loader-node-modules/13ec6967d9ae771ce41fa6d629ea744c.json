{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/keylane/Github/spotcodetest/app/javascript/components/search/index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport SearchBar from './search_bar';\nimport Categories from '../common/categories';\nimport { Columns } from 'react-bulma-components';\nimport SearchService from '../../services/search';\nimport CategoriesService from '../../services/categories';\nimport ResultsTabs from '../common/results_tabs';\n\nvar Search = function Search() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      albums = _useState2[0],\n      setAlbums = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      artists = _useState4[0],\n      setArtists = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      songs = _useState6[0],\n      setSongs = _useState6[1];\n\n  function fetchCategorySearch(_x) {\n    return _fetchCategorySearch.apply(this, arguments);\n  }\n\n  function _fetchCategorySearch() {\n    _fetchCategorySearch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return CategoriesService.show(id);\n\n            case 2:\n              response = _context.sent;\n              setAlbums(response.data['albums']);\n              setArtists(response.data['artists']);\n              setSongs(response.data['songs']);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetchCategorySearch.apply(this, arguments);\n  }\n\n  function fetchSearch(_x2) {\n    return _fetchSearch.apply(this, arguments);\n  }\n\n  function _fetchSearch() {\n    _fetchSearch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(query) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return SearchService.index(query);\n\n            case 2:\n              response = _context2.sent;\n              setAlbums(response.data['albums']);\n              setArtists(response.data['artists']);\n              setSongs(response.data['songs']);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _fetchSearch.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Columns, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Columns.Column, {\n    desktop: {\n      size: 6,\n      offset: 3\n    },\n    mobile: {\n      size: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    fetchSearch: fetchSearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Categories, {\n    fetchCategorySearch: fetchCategorySearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Search;","map":{"version":3,"sources":["/home/keylane/Github/spotcodetest/app/javascript/components/search/index.js"],"names":["React","Fragment","useEffect","useState","SearchBar","Categories","Columns","SearchService","CategoriesService","ResultsTabs","Search","albums","setAlbums","artists","setArtists","songs","setSongs","fetchCategorySearch","id","show","response","data","fetchSearch","query","index","size","offset"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,kBACWP,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,MACVQ,MADU;AAAA,MACFC,SADE;;AAAA,mBAEaT,QAAQ,CAAC,EAAD,CAFrB;AAAA;AAAA,MAEVU,OAFU;AAAA,MAEDC,UAFC;;AAAA,mBAGSX,QAAQ,CAAC,EAAD,CAHjB;AAAA;AAAA,MAGVY,KAHU;AAAA,MAGHC,QAHG;;AAAA,WAKFC,mBALE;AAAA;AAAA;;AAAA;AAAA,oFAKjB,iBAAmCC,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAC2BV,iBAAiB,CAACW,IAAlB,CAAuBD,EAAvB,CAD3B;;AAAA;AACUE,cAAAA,QADV;AAEIR,cAAAA,SAAS,CAACQ,QAAQ,CAACC,IAAT,CAAc,QAAd,CAAD,CAAT;AACAP,cAAAA,UAAU,CAACM,QAAQ,CAACC,IAAT,CAAc,SAAd,CAAD,CAAV;AACAL,cAAAA,QAAQ,CAACI,QAAQ,CAACC,IAAT,CAAc,OAAd,CAAD,CAAR;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALiB;AAAA;AAAA;;AAAA,WAYFC,WAZE;AAAA;AAAA;;AAAA;AAAA,4EAYjB,kBAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAC2BhB,aAAa,CAACiB,KAAd,CAAoBD,KAApB,CAD3B;;AAAA;AACUH,cAAAA,QADV;AAEIR,cAAAA,SAAS,CAACQ,QAAQ,CAACC,IAAT,CAAc,QAAd,CAAD,CAAT;AACAP,cAAAA,UAAU,CAACM,QAAQ,CAACC,IAAT,CAAc,SAAd,CAAD,CAAV;AACAL,cAAAA,QAAQ,CAACI,QAAQ,CAACC,IAAT,CAAc,OAAd,CAAD,CAAR;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAZiB;AAAA;AAAA;;AAoBjB,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD,CAAS,MAAT;AAAgB,IAAA,OAAO,EAAE;AAAEI,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE;AAAnB,KAAzB;AAAiD,IAAA,MAAM,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAEH,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,CADJ,eAMI,oBAAC,UAAD;AAAY,IAAA,mBAAmB,EAAEL,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAUH,CA9BD;;AA+BA,eAAeP,MAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport SearchBar from './search_bar';\nimport Categories from '../common/categories';\nimport { Columns } from 'react-bulma-components';\nimport SearchService from '../../services/search';\nimport CategoriesService from '../../services/categories';\nimport ResultsTabs from '../common/results_tabs';\nconst Search = () => {\n    const [albums, setAlbums] = useState([]);\n    const [artists, setArtists] = useState([]);\n    const [songs, setSongs] = useState([]);\n\n    async function fetchCategorySearch(id) {\n        const response = await CategoriesService.show(id);\n        setAlbums(response.data['albums']);\n        setArtists(response.data['artists']);\n        setSongs(response.data['songs']);\n    }\n\n    async function fetchSearch(query) {\n        const response = await SearchService.index(query);\n        setAlbums(response.data['albums']);\n        setArtists(response.data['artists']);\n        setSongs(response.data['songs']);\n    }\n\n\n    return (\n        <Fragment>\n            <Columns>\n            <Columns.Column desktop={{ size: 6, offset: 3 }} mobile={{ size: 12 }}>\n                <SearchBar fetchSearch={fetchSearch}/>\n            </Columns.Column>\n            </Columns>\n            <Categories fetchCategorySearch={fetchCategorySearch}/>\n        </Fragment>\n    );\n}\nexport default Search;"]},"metadata":{},"sourceType":"module"}