{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/keylane/Github/spotcodetest/app/javascript/components/musics/index.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n margin-bottom: 30px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Music from './music';\nimport { Button, Columns } from 'react-bulma-components';\nimport RecentlyHeardsService from '../../services/recently_heards';\nvar PlaySequenceButton = styled(Button)(_templateObject());\n\nvar Musics = function Musics(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      songs = _useState2[0],\n      setSongs = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      playing = _useState4[0],\n      setPlaying = _useState4[1];\n\n  var AudioRef = useRef();\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      playRandom = _useState6[0],\n      setPlayRandom = _useState6[1];\n\n  var NextSong = function NextSong() {\n    if (playRandom) {\n      var index = Math.floor(Math.random() * props.songs.length);\n      setPlaying(props.songs[index]);\n    } else setPlaying([]);\n  };\n\n  var SwitchRandom = function SwitchRandom() {\n    if (playRandom) {\n      setPlayRandom(false);\n      setPlaying([]);\n    } else setPlayRandom(true);\n  };\n\n  useEffect(function () {\n    if (playRandom) NextSong();\n  }, [playRandom]);\n  useEffect(function () {\n    if (AudioRef.current !== null) {\n      AudioRef.current.pause();\n      AudioRef.current.load();\n\n      if (playing.id) {\n        AudioRef.current.play();\n      }\n    }\n  }, [playing]);\n  useEffect(function () {\n    setSongs(props.songs.map(function (song, key) {\n      return /*#__PURE__*/React.createElement(Music, {\n        song: song,\n        playing: playing.id == song.id,\n        setPlaying: setPlaying,\n        key: key,\n        artist_name: props.artist_name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      });\n    }));\n  }, [props.songs, playing]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Columns, {\n    className: \"is-mobile is-centered\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Columns.Column, {\n    desktop: {\n      size: 2\n    },\n    mobile: {\n      size: 12\n    },\n    className: \"has-text-centered\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PlaySequenceButton, {\n    className: \"is-medium\",\n    color: \"primary\",\n    outlined: true,\n    onClick: function onClick() {\n      return SwitchRandom();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, playRandom ? 'Parar de tocar' : 'Tocar aleatoriamente '), /*#__PURE__*/React.createElement(\"audio\", {\n    controls: true,\n    ref: AudioRef,\n    onEnded: function onEnded() {\n      return NextSong();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: playing.file_url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  })))), songs);\n};\n\nexport default Musics;","map":{"version":3,"sources":["/home/keylane/Github/spotcodetest/app/javascript/components/musics/index.js"],"names":["React","Fragment","useState","useEffect","useRef","styled","Music","Button","Columns","RecentlyHeardsService","PlaySequenceButton","Musics","props","songs","setSongs","playing","setPlaying","AudioRef","playRandom","setPlayRandom","NextSong","index","Math","floor","random","length","SwitchRandom","current","pause","load","id","play","map","song","key","artist_name","size","file_url"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,MAA/C,QAA6D,OAA7D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,wBAAhC;AACA,OAAOC,qBAAP,MAAkC,gCAAlC;AAEA,IAAMC,kBAAkB,GAAGL,MAAM,CAACE,MAAD,CAAT,mBAAxB;;AAGA,IAAMI,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA,kBACIV,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,MACfW,KADe;AAAA,MACRC,QADQ;;AAAA,mBAEQZ,QAAQ,CAAC,EAAD,CAFhB;AAAA;AAAA,MAEfa,OAFe;AAAA,MAENC,UAFM;;AAGtB,MAAMC,QAAQ,GAAGb,MAAM,EAAvB;;AAHsB,mBAIcF,QAAQ,CAAC,KAAD,CAJtB;AAAA;AAAA,MAIfgB,UAJe;AAAA,MAIHC,aAJG;;AAMtB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,QAAGF,UAAH,EAAe;AACb,UAAIG,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,KAAK,CAACC,KAAN,CAAYY,MAAvC,CAAZ;AACAT,MAAAA,UAAU,CAACJ,KAAK,CAACC,KAAN,CAAYQ,KAAZ,CAAD,CAAV;AACF,KAHA,MAIEL,UAAU,CAAC,EAAD,CAAV;AACL,GAND;;AAQE,MAAMU,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAGR,UAAH,EAAe;AACbC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAH,MAAAA,UAAU,CAAC,EAAD,CAAV;AACF,KAHA,MAIEG,aAAa,CAAC,IAAD,CAAb;AACL,GANC;;AAQAhB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGe,UAAH,EACEE,QAAQ;AACb,GAHU,EAGR,CAACF,UAAD,CAHQ,CAAT;AAKFf,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIc,QAAQ,CAACU,OAAT,KAAqB,IAAzB,EAA+B;AAC7BV,MAAAA,QAAQ,CAACU,OAAT,CAAiBC,KAAjB;AACAX,MAAAA,QAAQ,CAACU,OAAT,CAAiBE,IAAjB;;AACA,UAAGd,OAAO,CAACe,EAAX,EAAe;AACbb,QAAAA,QAAQ,CAACU,OAAT,CAAiBI,IAAjB;AACD;AACF;AACJ,GARQ,EAQN,CAAChB,OAAD,CARM,CAAT;AAUAZ,EAAAA,SAAS,CAAC,YAAM;AAChBW,IAAAA,QAAQ,CAACF,KAAK,CAACC,KAAN,CAAYmB,GAAZ,CAAgB,UAACC,IAAD,EAAOC,GAAP;AAAA,0BACrB,oBAAC,KAAD;AACA,QAAA,IAAI,EAAED,IADN;AAEA,QAAA,OAAO,EAAElB,OAAO,CAACe,EAAR,IAAcG,IAAI,CAACH,EAF5B;AAGA,QAAA,UAAU,EAAEd,UAHZ;AAIA,QAAA,GAAG,EAAEkB,GAJL;AAKA,QAAA,WAAW,EAAEtB,KAAK,CAACuB,WALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADqB;AAAA,KAAhB,CAAD,CAAR;AAUC,GAXQ,EAWN,CAACvB,KAAK,CAACC,KAAP,EAAcE,OAAd,CAXM,CAAT;AAaA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,uBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD,CAAS,MAAT;AAAgB,IAAA,OAAO,EAAE;AAACqB,MAAAA,IAAI,EAAE;AAAP,KAAzB;AAAoC,IAAA,MAAM,EAAE;AAACA,MAAAA,IAAI,EAAE;AAAP,KAA5C;AAAwD,IAAA,SAAS,EAAC,mBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,kBAAD;AACA,IAAA,SAAS,EAAC,WADV;AAEA,IAAA,KAAK,EAAC,SAFN;AAGA,IAAA,QAAQ,MAHR;AAIA,IAAA,OAAO,EAAE;AAAA,aAAMV,YAAY,EAAlB;AAAA,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMCR,UAAU,GAAG,gBAAH,GAAsB,uBANjC,CADJ,eASI;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,GAAG,EAAED,QAArB;AAA+B,IAAA,OAAO,EAAE;AAAA,aAAMG,QAAQ,EAAd;AAAA,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,GAAG,EAAEL,OAAO,CAACsB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,CADA,CADJ,EAgBKxB,KAhBL,CADJ;AAoBH,CAtED;;AAuEA,eAAeF,MAAf","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Music from './music';\nimport { Button, Columns } from 'react-bulma-components';\nimport RecentlyHeardsService from '../../services/recently_heards';\n\nconst PlaySequenceButton = styled(Button)`\n margin-bottom: 30px;\n`\nconst Musics = (props) => {\n    const [songs, setSongs] = useState([]);\n    const [playing, setPlaying] = useState([]);\n    const AudioRef = useRef();\n    const [playRandom, setPlayRandom] = useState(false);\n\n    const NextSong = () => {\n        if(playRandom) {\n          let index = Math.floor(Math.random() * props.songs.length);\n          setPlaying(props.songs[index]);\n       } else\n          setPlaying([]);\n    }\n     \n      const SwitchRandom = () => {\n        if(playRandom) {\n          setPlayRandom(false);\n          setPlaying([]);\n       } else\n          setPlayRandom(true);\n    }\n     \n      useEffect(() => {\n        if(playRandom)\n          NextSong();\n    }, [playRandom]);\n\n    useEffect(() => {\n        if (AudioRef.current !== null) {\n          AudioRef.current.pause();\n          AudioRef.current.load();\n          if(playing.id) {\n            AudioRef.current.play();\n          }\n        }\n    }, [playing]);\n \n    useEffect(() => {\n    setSongs(props.songs.map((song, key) =>\n        <Music\n        song={song}\n        playing={playing.id == song.id}\n        setPlaying={setPlaying}\n        key={key}\n        artist_name={props.artist_name}\n        />\n    ));\n\n    }, [props.songs, playing]);\n\n    return (\n        <Fragment>\n            <Columns className='is-mobile is-centered'>\n            <Columns.Column desktop={{size: 2}} mobile={{size: 12}} className='has-text-centered'>\n                <PlaySequenceButton\n                className='is-medium'\n                color='primary'\n                outlined\n                onClick={() => SwitchRandom()}\n                >\n                {playRandom ? 'Parar de tocar' : 'Tocar aleatoriamente '}\n                </PlaySequenceButton>\n                <audio controls ref={AudioRef} onEnded={() => NextSong()} >\n                    <source src={playing.file_url} />\n                </audio>\n            </Columns.Column>\n            </Columns>\n            {songs}\n        </Fragment>\n    );\n}\nexport default Musics;"]},"metadata":{},"sourceType":"module"}