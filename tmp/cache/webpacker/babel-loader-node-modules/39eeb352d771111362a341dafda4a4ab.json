{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/keylane/Github/spotcodetest/app/javascript/components/albums/index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n     margin-top: 20px;\\n    margin-bottom: 20px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Heading, Columns, Image } from 'react-bulma-components';\nimport styled from 'styled-components';\nimport AlbumsService from '../../services/albums';\nimport { useParams } from 'react-router-dom';\nvar DivVSpaced = styled.div(_templateObject());\n\nvar Albums = function Albums() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      album = _useState2[0],\n      setAlbum = _useState2[1];\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  function fetchAlbum() {\n    return _fetchAlbum.apply(this, arguments);\n  }\n\n  function _fetchAlbum() {\n    _fetchAlbum = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return AlbumsService.show(id);\n\n            case 2:\n              response = _context.sent;\n              setAlbum(response.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetchAlbum.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    fetchAlbum();\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Columns, {\n    className: \"is-vcentered is-mobile is-centered\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Columns.Column, {\n    desktop: {\n      size: 3\n    },\n    className: \"has-text-centered\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: album.cover_url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(DivVSpaced, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: 5,\n    className: \"has-text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, album.title), /*#__PURE__*/React.createElement(Heading, {\n    size: 6,\n    subtitle: true,\n    className: \"has-text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, album.artist_name)))));\n};\n\nexport default Albums;","map":{"version":3,"sources":["/home/keylane/Github/spotcodetest/app/javascript/components/albums/index.js"],"names":["React","Fragment","useState","useEffect","Heading","Columns","Image","styled","AlbumsService","useParams","DivVSpaced","div","Albums","album","setAlbum","id","fetchAlbum","show","response","data","size","cover_url","title","artist_name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,KAA3B,QAAwC,wBAAxC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,IAAMC,UAAU,GAAGH,MAAM,CAACI,GAAV,mBAAhB;;AAKA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,kBACOV,QAAQ,CAAC,EAAD,CADf;AAAA;AAAA,MACZW,KADY;AAAA,MACLC,QADK;;AAAA,mBAENL,SAAS,EAFH;AAAA,MAEbM,EAFa,cAEbA,EAFa;;AAAA,WAIJC,UAJI;AAAA;AAAA;;AAAA;AAAA,2EAInB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACyBR,aAAa,CAACS,IAAd,CAAmBF,EAAnB,CADzB;;AAAA;AACQG,cAAAA,QADR;AAEEJ,cAAAA,QAAQ,CAACI,QAAQ,CAACC,IAAV,CAAR;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJmB;AAAA;AAAA;;AASnBhB,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAMA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,oCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD,CAAS,MAAT;AAAgB,IAAA,OAAO,EAAE;AAACI,MAAAA,IAAI,EAAE;AAAP,KAAzB;AAAoC,IAAA,SAAS,EAAC,mBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEP,KAAK,CAACQ,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE,CAAf;AAAkB,IAAA,SAAS,EAAC,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CR,KAAK,CAACS,KAApD,CADF,eAEE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE,CAAf;AAAkB,IAAA,QAAQ,MAA1B;AAA2B,IAAA,SAAS,EAAC,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuDT,KAAK,CAACU,WAA7D,CAFF,CAFF,CADF,CADF,CADF;AAaD,CA5BD;;AA6BA,eAAeX,MAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { Heading, Columns, Image } from 'react-bulma-components';\nimport styled from 'styled-components';\nimport AlbumsService from '../../services/albums';\nimport { useParams } from 'react-router-dom';\n\nconst DivVSpaced = styled.div`\n     margin-top: 20px;\n    margin-bottom: 20px;\n`\n\nconst Albums = () => {\n  const [album, setAlbum] = useState({});\n  let { id } = useParams();\n\n  async function fetchAlbum() {\n    const response = await AlbumsService.show(id);\n    setAlbum(response.data);\n  }\n \n  useEffect(() => {\n    fetchAlbum();\n  }, []);\n \n  \n\n  return (\n    <Fragment>\n      <Columns className='is-vcentered is-mobile is-centered'>\n        <Columns.Column desktop={{size: 3}} className='has-text-centered'>\n          <Image src={album.cover_url}/>\n          <DivVSpaced>\n            <Heading size={5} className='has-text-white'>{album.title}</Heading>\n            <Heading size={6} subtitle className='has-text-white'>{album.artist_name}</Heading>\n          </DivVSpaced>\n        </Columns.Column>\n      </Columns>\n    </Fragment>\n  );\n}\nexport default Albums;"]},"metadata":{},"sourceType":"module"}